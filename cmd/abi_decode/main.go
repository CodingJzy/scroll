package main

import (
	"encoding/hex"
	"fmt"
	"log"
	"scroll/abi/swap"
)

func loop(params []Param) {
	for _, param := range params {

		log.Println("===type", param.Type)
		log.Println("===name", param.Name)
		log.Println("===value", param.Value)

		switch param.Type {
		case "bytes[]":

			value, ok := param.Value.([][]uint8)
			fmt.Println("长度", len(value))
			if ok {
				for i := 0; i < 4; i++ {
					decodeMethod, err := txDataDecoder.DecodeMethod(hex.EncodeToString(value[i]))
					if err != nil {
						log.Println(err.Error())
						return
					}
					log.Println("===================", decodeMethod.Name, "===================")
					loop(decodeMethod.Params)
				}
			}

		default:
			fmt.Println("", param)
		}
	}
}

var txDataDecoder = NewABIDecoder()

func main() {
	//txData := "0x5ae401dc000000000000000000000000000000000000000000000000000000006429343500000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e404e45aaf000000000000000000000000a1ea0b2354f5a344110af2b6ad68e75545009a03000000000000000000000000a0d71b9877f44c744546d649147e3f1e70a937600000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000007ed71f614b88a736a05ef76edad1200f00f61a53000000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000000000000000000000000000daf1be705f5cd33cca000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

	txData := "0x60806040526040516105d83803806105d8833981810160405281019061002591906100f0565b804210610067576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161005e906101a0565b60405180910390fd5b8060008190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101c0565b600080fd5b6000819050919050565b6100cd816100ba565b81146100d857600080fd5b50565b6000815190506100ea816100c4565b92915050565b600060208284031215610106576101056100b5565b5b6000610114848285016100db565b91505092915050565b600082825260208201905092915050565b7f556e6c6f636b2074696d652073686f756c6420626520696e207468652066757460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b600061018a60238361011d565b91506101958261012e565b604082019050919050565b600060208201905081810360008301526101b98161017d565b9050919050565b610409806101cf6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063251c1aa3146100465780633ccfd60b146100645780638da5cb5b1461006e575b600080fd5b61004e61008c565b60405161005b919061024a565b60405180910390f35b61006c610092565b005b61007661020b565b60405161008391906102a6565b60405180910390f35b60005481565b6000544210156100d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ce9061031e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015e9061038a565b60405180910390fd5b7fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b9347426040516101989291906103aa565b60405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610208573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b61024481610231565b82525050565b600060208201905061025f600083018461023b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029082610265565b9050919050565b6102a081610285565b82525050565b60006020820190506102bb6000830184610297565b92915050565b600082825260208201905092915050565b7f596f752063616e27742077697468647261772079657400000000000000000000600082015250565b60006103086016836102c1565b9150610313826102d2565b602082019050919050565b60006020820190508181036000830152610337816102fb565b9050919050565b7f596f75206172656e277420746865206f776e6572000000000000000000000000600082015250565b60006103746014836102c1565b915061037f8261033e565b602082019050919050565b600060208201905081810360008301526103a381610367565b9050919050565b60006040820190506103bf600083018561023b565b6103cc602083018461023b565b939250505056fea26469706673582212204dd4a7a41dee611b487ff8b238c573552a81d92630114c4cef6b1c122840b9bc64736f6c63430008130033000000000000000000000000000000000000000000000000000001875546e688"
	//txData := "0x5ae401dc00000000000000000000000000000000000000000000000000000000642982cd00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e404e45aaf000000000000000000000000a0d71b9877f44c744546d649147e3f1e70a93760000000000000000000000000a1ea0b2354f5a344110af2b6ad68e75545009a030000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000001b2de9662df9983d7e87b9c064c0f6568516ec6b00000000000000000000000000000000000000000000003635c9adc5dea000000000000000000000000000000000000000000000000000000011c612aa99b9fd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
	txDataDecoder.SetABI(swap.SwapABIMetaData.ABI)

	method, err := txDataDecoder.DecodeMethod(txData)
	log.Println(method.Name)

	if err != nil {
		log.Fatal(err)
	}

	loop(method.Params)
}
